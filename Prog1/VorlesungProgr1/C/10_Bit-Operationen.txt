--------------------------------------------BIT-OPERATOREN-------------------------------------------202-

-----Logische Bit-Operatoren: Bitweises... "&"=AND, "|"=OR, "^"=XOR(Circumflex), "~"=NOT(Tilde)
dürfen nur für ganzzahlige Datentypen benutzt werden(vorzeichenbehaftet:implementierungsabh.Aspekte)
Anwendung auf allen Bits d.Operanden / Verknüpfung der Bits der jeweiligen Position
infix: &,|,^ / präfix: ~

Flags: binäre Zahl, Verwendung zur Kennzeichnung best.Zustände (setzen, löschen, lesen)[unsigned x]
Verwendung logischer Bit-Operatoren mit Masken zum Zugriff auf einzelne Flags:
	[a operator= zuveränderndeStelle]
	setzen: mit bitw.ODER-Operator (Bits, in Bitmaske=1: setzen auf "1" / in Maske=0: unverändert)
	löschen: mit bitw.UND-Operator (Bits, in Bitmaske=0: löschen / in Maske=1: unverändert)
	lesen: mit bitw.UND-Operator (Bitmaske: an zu prüfenden Stellen=1, sonst:0(maskierung/ausblendung))
	invertieren/toggeln: mit bitw.XOR-Operator (Bits, in Bitmaske=1: invertieren / sonst: unverändert)

-----Shift-Operatoren: wirken wie mul/div mit Pozenzen von 2
Verschiebung von Bits um positive ganzzahlige Position nach links"<<"|rechts">>"
Rechtsshit-Operator: A >> B: Verschiebung der 
	


--211